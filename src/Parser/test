#!/usr/bin/env python3

import subprocess
import os


def get_files_in_directory(directory):
    # List all files in the directory
    try:
        files = [
            os.path.basename(f).split(".")[0]
            for f in os.listdir(directory)
            if os.path.isfile(os.path.join(directory, f))
        ]
        return files
    except FileNotFoundError:
        print(f"The directory {directory} was not found.")
        return []
    except PermissionError:
        print(f"Permission denied to access the directory {directory}.")
        return []


def run_test(filename):
    print(f"\n--- Running File {filename} ---\n")

    file = f"tests/{filename}.cm"
    output = ""
    try:
        result = subprocess.run(
            f"./run -c -c {file}",
            shell=True,
            check=True,
            capture_output=True,
            text=True,
        )
        print(result.stdout)

        input = "g\nq\n"
        result = subprocess.run(
            f"./Simulator/tm Programs/{filename}.tm",
            shell=True,
            check=True,
            capture_output=True,
            input=input.encode("utf-8"),
        )

        output = result.stdout.decode("utf-8")

        print(output)
    except subprocess.CalledProcessError as e:
        print(f"Error occured: {e.stdout}")
        return None

    print(f"\n--- Running File {filename} ---\n")


def make():
    try:
        subprocess.run(["make"])
        subprocess.run("cd Simulator && make", shell=True)

    except subprocess.CalledProcessError as e:
        print(f"Error in make: {e.stderr}")


def run():
    make()

    files = get_files_in_directory("tests")

    for file in files:
        run_test(file)


run()
